"0","# First filter down to serum data on all patients who are not missing all serum but protein c"
"0","serum_data_good <- serum_data %>% "
"0","  group_by(id) %>% "
"0","  mutate("
"0","    missing_protein_c = sum((variable == ""proteinC"") & is.na(value))>0,"
"0","    missing_all_serum = sum(is.na(value)) == n()"
"0","  ) %>% "
"0","  ungroup() %>% "
"0","  filter(!missing_all_serum) %>% "
"0","  select(id, missing_protein_c, variable, value) %>% "
"0","  spread(variable, value)"
"0","# dataframe of just missing values for serum values. "
"0","# this is for later merging into gathered data after imputation"
"0","serum_data_bad <- serum_data %>% "
"0","  filter(!(id %in% serum_data_good$id))"
"0","full_obs <- serum_data_good %>% "
"0","  filter(!missing_protein_c) "
"0","train_data <- full_obs %>% "
"0","  select(-id, -missing_protein_c, -proteinC) %>% "
"0","  as.matrix()"
"0","missing_obs <- serum_data_good %>% "
"0","  filter(missing_protein_c) "
"0","test_data <- missing_obs %>% "
"0","  select(-id, -missing_protein_c, -proteinC) %>% "
"0","  as.matrix()"
"0","nearest_neighbors <- get.knnx(train_data, test_data, k = 10)"
"0","weighted_impute <- function(i = 1){"
"0","  nearest_values <- full_obs[nearest_neighbors$nn.index[i,],]$proteinC"
"0","  distances <- nearest_neighbors$nn.dist[i,]"
"0","  weighted.mean(nearest_values, 1/distances)"
"0","}"
"0","serum_data_imputed <- missing_obs %>% "
"0","  mutate(proteinC = purrr::map_dbl(1:2, weighted_impute)) %>% "
"0","  bind_rows(full_obs) %>% "
"0","  select(-missing_protein_c) %>% "
"0","  gather(variable, value, -id) %>% "
"0","  left_join(data_dict, by = 'variable') %>% "
"0","  bind_rows(serum_data_bad)"
"0","continuous_data_imputed <- continuous_data %>% "
"0","  mutate(value = ifelse(is.na(value) & variable == 'education_level', median(data$education_level, na.rm = TRUE), value))"
"0","gathered_data_imputed <- rbind("
"0","  serum_data_imputed,"
"0","  continuous_data_imputed,"
"0","  binary_data,"
"0","  outcome_data"
"0",")"
